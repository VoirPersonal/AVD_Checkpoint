{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "U5E-Dl875IY4",
        "ddWZQgUrKw4U",
        "e1voh_mSLH7f",
        "Ilx7n_hjLMef",
        "7XMv4aERLSTy",
        "WUO-6aTILclp",
        "MibDDDmaKrF4",
        "cejCQbVWMBlQ",
        "k_IKabgdMUL8",
        "GBK4tuK-Mc6n",
        "C8sbh0bOMm40",
        "Rkkbd4wGOBfh"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# **Checkpoint 1 - Data Gathering & Business Understanding**"
      ],
      "metadata": {
        "id": "XORiQRtuCebt"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "[Sumber dataset yang saya gunakan](https://www.kaggle.com/datasets/thedevastator/adidas-fashion-retail-products-dataset-9300-prod)"
      ],
      "metadata": {
        "id": "RP6h4R1XSlp2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Data Gathering & Business Understandings**"
      ],
      "metadata": {
        "id": "YRdC6QJ-CYmv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Business Objective**"
      ],
      "metadata": {
        "id": "AHSh2L51Ckcc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Tujuan dari projek ini adalah untuk dapat memahami bagaimana harga produk dan jumlah ulasan berpengaruh terhadap rating yang diberikan oleh pelanggan. Yang meliputi harga, rating, dan jumlah ulasan produk. Dengan mengetahui pola hubungan ini, Adidas dapat menyusun strategi harga yang lebih efektif dan memahami faktor - faktor yang memengaruhi kepuasan pelanggan."
      ],
      "metadata": {
        "id": "ZzBPV7jwG35C"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Assess Situation**"
      ],
      "metadata": {
        "id": "Bjx2-QJSH5tO"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dengan Industri e-commerce yang semakin kompetitif, di mana pembeli sangat dipengaruhi oleh harga dan ulasan saat membeli produk. Dalam konteks ini, Adidas perlu memahami bagaimana harga dan jumlah ulasan mempengaruhi rating produk, agar dapat mengoptimalkan strategi pemasaran dan penetapan harga."
      ],
      "metadata": {
        "id": "Kn9Ub2PxIF1N"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Data Mining Goals**"
      ],
      "metadata": {
        "id": "ZH_YBYJoJOTv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Project ini bertujuan untuk menganalisis apakah harga yang lebih tinggi berkorelasi dengan rating yang lebih baik serta menentukan apakah jumlah ulasan berpengaruh terhadap rating produk. Selain itu, studi ini juga berupaya memahami distribusi harga dan rating berdasarkan kategori produk melalui visualisasi data, sehingga dapat memberikan wawasan yang lebih mendalam mengenai pola konsumsi pelanggan."
      ],
      "metadata": {
        "id": "XVc4R-TPJQ0g"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Project Plan**"
      ],
      "metadata": {
        "id": "L52JeLOPWd2I"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Proyek ini akan dimulai dengan pengumpulan data dari dataset Adidas USA yang berisi informasi harga, rating, dan jumlah ulasan produk. Setelah itu, data akan diproses untuk menghilangkan nilai yang hilang atau anomali agar analisis lebih akurat. Selanjutnya, eksplorasi data dilakukan untuk memahami distribusi harga, ulasan, dan rating melalui berbagai teknik visualisasi. Setelah eksplorasi, analisis korelasi akan diterapkan untuk menentukan hubungan antara harga, jumlah ulasan, dan rating. Akhirnya, hasil analisis akan diinterpretasikan untuk memberikan wawasan yang dapat digunakan sebagai dasar rekomendasi strategi harga dan pemasaran produk Adidas."
      ],
      "metadata": {
        "id": "YtN5fYkIWkWW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Dataset**"
      ],
      "metadata": {
        "id": "U5E-Dl875IY4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as dataset"
      ],
      "metadata": {
        "id": "x2l0zDQZ5NHR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "file_path = \"/content/adidas_usa.csv\"\n",
        "\n",
        "dataset = pd.read_csv(file_path)"
      ],
      "metadata": {
        "id": "AMo03php5YeH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dataset"
      ],
      "metadata": {
        "id": "FDl8wFrc6hYL",
        "outputId": "c0803b80-365a-400c-b4f5-1dec89a4de07",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     index                                                url  \\\n",
              "0        0  https://www.adidas.com/us/beach-shorts/FJ5089....   \n",
              "1        1  https://www.adidas.com/us/five-ten-kestrel-lac...   \n",
              "2        2  https://www.adidas.com/us/mexico-away-jersey/G...   \n",
              "3        3  https://www.adidas.com/us/five-ten-hiangle-pro...   \n",
              "4        4  https://www.adidas.com/us/mesh-broken-stripe-p...   \n",
              "..     ...                                                ...   \n",
              "840    840  https://www.adidas.com/us/supernova-plus-shoes...   \n",
              "841    841  https://www.adidas.com/us/choigo-shoes/H00667....   \n",
              "842    842  https://www.adidas.com/us/daily-3.0-shoes/GZ77...   \n",
              "843    843  https://www.adidas.com/us/daily-3.0-shoes/GZ77...   \n",
              "844    844  https://www.adidas.com/us/choigo-shoes/FY6503....   \n",
              "\n",
              "                                                name     sku  selling_price  \\\n",
              "0                                       Beach Shorts  FJ5089             40   \n",
              "1          Five Ten Kestrel Lace Mountain Bike Shoes  BC0770            150   \n",
              "2                                 Mexico Away Jersey  GC7946             70   \n",
              "3    Five Ten Hiangle Pro Competition Climbing Shoes  FV4744            160   \n",
              "4                      Mesh Broken-Stripe Polo Shirt  GM0239             65   \n",
              "..                                               ...     ...            ...   \n",
              "840                                 Supernova+ Shoes  FX2858             72   \n",
              "841                                     Choigo Shoes  H00667             70   \n",
              "842                                  Daily 3.0 Shoes  GZ7705             35   \n",
              "843                                  Daily 3.0 Shoes  GZ7706             40   \n",
              "844                                     Choigo Shoes  FY6503             70   \n",
              "\n",
              "    original_price currency availability  color  category  ...  \\\n",
              "0              NaN      USD      InStock  Black  Clothing  ...   \n",
              "1              NaN      USD      InStock   Grey     Shoes  ...   \n",
              "2              NaN      USD      InStock  White  Clothing  ...   \n",
              "3              NaN      USD      InStock  Black     Shoes  ...   \n",
              "4              NaN      USD      InStock   Blue  Clothing  ...   \n",
              "..             ...      ...          ...    ...       ...  ...   \n",
              "840           $120      USD      InStock  White     Shoes  ...   \n",
              "841           $100      USD      InStock  White     Shoes  ...   \n",
              "842            $50      USD      InStock  Black     Shoes  ...   \n",
              "843            $50      USD      InStock   Pink     Shoes  ...   \n",
              "844           $100      USD      InStock  Black     Shoes  ...   \n",
              "\n",
              "             source_website     breadcrumbs  \\\n",
              "0    https://www.adidas.com  Women/Clothing   \n",
              "1    https://www.adidas.com     Women/Shoes   \n",
              "2    https://www.adidas.com   Kids/Clothing   \n",
              "3    https://www.adidas.com  Five Ten/Shoes   \n",
              "4    https://www.adidas.com    Men/Clothing   \n",
              "..                      ...             ...   \n",
              "840  https://www.adidas.com     Women/Shoes   \n",
              "841  https://www.adidas.com     Women/Shoes   \n",
              "842  https://www.adidas.com      Kids/Shoes   \n",
              "843  https://www.adidas.com      Kids/Shoes   \n",
              "844  https://www.adidas.com     Women/Shoes   \n",
              "\n",
              "                                           description   brand  \\\n",
              "0    Splashing in the surf. Making memories with yo...  adidas   \n",
              "1    Lace up and get after it. The Five Ten Kestrel...  adidas   \n",
              "2    Clean and crisp, this adidas Mexico Away Jerse...  adidas   \n",
              "3    The Hiangle Pro takes on the classic shape of ...  adidas   \n",
              "4    Step up to the tee relaxed. This adidas golf p...  adidas   \n",
              "..                                                 ...     ...   \n",
              "840  Take off. Touch down. Repeat. These adidas run...  adidas   \n",
              "841  If you want drama, the bold female track and f...  adidas   \n",
              "842  The style is in the details of the Daily 3.0 S...  adidas   \n",
              "843  The style is in the details of the Daily 3.0 S...  adidas   \n",
              "844  Take your style to bold new heights. Throw in ...  adidas   \n",
              "\n",
              "                                                images country language  \\\n",
              "0    https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "1    https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "2    https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "3    https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "4    https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "..                                                 ...     ...      ...   \n",
              "840  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "841  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "842  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "843  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "844  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "\n",
              "    average_rating  reviews_count                  crawled_at  \n",
              "0              4.5             35  2021-10-23 17:50:17.331255  \n",
              "1              4.8              4  2021-10-23 17:50:17.423830  \n",
              "2              4.9             42  2021-10-23 17:50:17.530834  \n",
              "3              3.7              7  2021-10-23 17:50:17.615054  \n",
              "4              4.7             11  2021-10-23 17:50:17.702680  \n",
              "..             ...            ...                         ...  \n",
              "840            4.3            151  2021-10-23 17:52:31.937924  \n",
              "841            4.7            135  2021-10-23 17:52:32.014973  \n",
              "842            4.7            190  2021-10-23 17:52:32.208426  \n",
              "843            4.7            190  2021-10-23 17:52:32.293622  \n",
              "844            4.7            135  2021-10-23 17:52:32.398104  \n",
              "\n",
              "[845 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f354223-cd65-49e0-b3ad-07050ad98f39\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>url</th>\n",
              "      <th>name</th>\n",
              "      <th>sku</th>\n",
              "      <th>selling_price</th>\n",
              "      <th>original_price</th>\n",
              "      <th>currency</th>\n",
              "      <th>availability</th>\n",
              "      <th>color</th>\n",
              "      <th>category</th>\n",
              "      <th>...</th>\n",
              "      <th>source_website</th>\n",
              "      <th>breadcrumbs</th>\n",
              "      <th>description</th>\n",
              "      <th>brand</th>\n",
              "      <th>images</th>\n",
              "      <th>country</th>\n",
              "      <th>language</th>\n",
              "      <th>average_rating</th>\n",
              "      <th>reviews_count</th>\n",
              "      <th>crawled_at</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>https://www.adidas.com/us/beach-shorts/FJ5089....</td>\n",
              "      <td>Beach Shorts</td>\n",
              "      <td>FJ5089</td>\n",
              "      <td>40</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Black</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Women/Clothing</td>\n",
              "      <td>Splashing in the surf. Making memories with yo...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.5</td>\n",
              "      <td>35</td>\n",
              "      <td>2021-10-23 17:50:17.331255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>https://www.adidas.com/us/five-ten-kestrel-lac...</td>\n",
              "      <td>Five Ten Kestrel Lace Mountain Bike Shoes</td>\n",
              "      <td>BC0770</td>\n",
              "      <td>150</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Grey</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Women/Shoes</td>\n",
              "      <td>Lace up and get after it. The Five Ten Kestrel...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.8</td>\n",
              "      <td>4</td>\n",
              "      <td>2021-10-23 17:50:17.423830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>https://www.adidas.com/us/mexico-away-jersey/G...</td>\n",
              "      <td>Mexico Away Jersey</td>\n",
              "      <td>GC7946</td>\n",
              "      <td>70</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>White</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Kids/Clothing</td>\n",
              "      <td>Clean and crisp, this adidas Mexico Away Jerse...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.9</td>\n",
              "      <td>42</td>\n",
              "      <td>2021-10-23 17:50:17.530834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>https://www.adidas.com/us/five-ten-hiangle-pro...</td>\n",
              "      <td>Five Ten Hiangle Pro Competition Climbing Shoes</td>\n",
              "      <td>FV4744</td>\n",
              "      <td>160</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Black</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Five Ten/Shoes</td>\n",
              "      <td>The Hiangle Pro takes on the classic shape of ...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>3.7</td>\n",
              "      <td>7</td>\n",
              "      <td>2021-10-23 17:50:17.615054</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>https://www.adidas.com/us/mesh-broken-stripe-p...</td>\n",
              "      <td>Mesh Broken-Stripe Polo Shirt</td>\n",
              "      <td>GM0239</td>\n",
              "      <td>65</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Blue</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Men/Clothing</td>\n",
              "      <td>Step up to the tee relaxed. This adidas golf p...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.7</td>\n",
              "      <td>11</td>\n",
              "      <td>2021-10-23 17:50:17.702680</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>840</th>\n",
              "      <td>840</td>\n",
              "      <td>https://www.adidas.com/us/supernova-plus-shoes...</td>\n",
              "      <td>Supernova+ Shoes</td>\n",
              "      <td>FX2858</td>\n",
              "      <td>72</td>\n",
              "      <td>$120</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>White</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Women/Shoes</td>\n",
              "      <td>Take off. Touch down. Repeat. These adidas run...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.3</td>\n",
              "      <td>151</td>\n",
              "      <td>2021-10-23 17:52:31.937924</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>841</th>\n",
              "      <td>841</td>\n",
              "      <td>https://www.adidas.com/us/choigo-shoes/H00667....</td>\n",
              "      <td>Choigo Shoes</td>\n",
              "      <td>H00667</td>\n",
              "      <td>70</td>\n",
              "      <td>$100</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>White</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Women/Shoes</td>\n",
              "      <td>If you want drama, the bold female track and f...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.7</td>\n",
              "      <td>135</td>\n",
              "      <td>2021-10-23 17:52:32.014973</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>842</th>\n",
              "      <td>842</td>\n",
              "      <td>https://www.adidas.com/us/daily-3.0-shoes/GZ77...</td>\n",
              "      <td>Daily 3.0 Shoes</td>\n",
              "      <td>GZ7705</td>\n",
              "      <td>35</td>\n",
              "      <td>$50</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Black</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Kids/Shoes</td>\n",
              "      <td>The style is in the details of the Daily 3.0 S...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.7</td>\n",
              "      <td>190</td>\n",
              "      <td>2021-10-23 17:52:32.208426</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>843</th>\n",
              "      <td>843</td>\n",
              "      <td>https://www.adidas.com/us/daily-3.0-shoes/GZ77...</td>\n",
              "      <td>Daily 3.0 Shoes</td>\n",
              "      <td>GZ7706</td>\n",
              "      <td>40</td>\n",
              "      <td>$50</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Pink</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Kids/Shoes</td>\n",
              "      <td>The style is in the details of the Daily 3.0 S...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.7</td>\n",
              "      <td>190</td>\n",
              "      <td>2021-10-23 17:52:32.293622</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>844</th>\n",
              "      <td>844</td>\n",
              "      <td>https://www.adidas.com/us/choigo-shoes/FY6503....</td>\n",
              "      <td>Choigo Shoes</td>\n",
              "      <td>FY6503</td>\n",
              "      <td>70</td>\n",
              "      <td>$100</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Black</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Women/Shoes</td>\n",
              "      <td>Take your style to bold new heights. Throw in ...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.7</td>\n",
              "      <td>135</td>\n",
              "      <td>2021-10-23 17:52:32.398104</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>845 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f354223-cd65-49e0-b3ad-07050ad98f39')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9f354223-cd65-49e0-b3ad-07050ad98f39 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9f354223-cd65-49e0-b3ad-07050ad98f39');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7fe3f94b-cd31-4445-be46-aea01c32e9ef\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7fe3f94b-cd31-4445-be46-aea01c32e9ef')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7fe3f94b-cd31-4445-be46-aea01c32e9ef button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_d8a04f89-a4c8-4b34-8081-ff09d9feec43\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dataset')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_d8a04f89-a4c8-4b34-8081-ff09d9feec43 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('dataset');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dataset"
            }
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Checkpoint 2 - Data Understanding & Data Preparation**"
      ],
      "metadata": {
        "id": "5mQufBFLCS0_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "[Sumber dataset yang saya gunakan](https://www.kaggle.com/datasets/thedevastator/adidas-fashion-retail-products-dataset-9300-prod)"
      ],
      "metadata": {
        "id": "ByWtQtP9S3GR"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Data Understanding**"
      ],
      "metadata": {
        "id": "PxwC5aXIEtSa"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Menampilkan dan memuat dataset**"
      ],
      "metadata": {
        "id": "ddWZQgUrKw4U"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "Tb-Rc-SFGyfw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "file_path = \"/content/adidas_usa.csv\"\n",
        "\n",
        "df = pd.read_csv(file_path)"
      ],
      "metadata": {
        "id": "s2gRDA96Gq3A"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8M0_H4XgHDtK",
        "outputId": "d611fc6e-80c6-46ec-e091-d41a6ed5daa4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 845 entries, 0 to 844\n",
            "Data columns (total 21 columns):\n",
            " #   Column          Non-Null Count  Dtype  \n",
            "---  ------          --------------  -----  \n",
            " 0   index           845 non-null    int64  \n",
            " 1   url             845 non-null    object \n",
            " 2   name            845 non-null    object \n",
            " 3   sku             845 non-null    object \n",
            " 4   selling_price   845 non-null    int64  \n",
            " 5   original_price  829 non-null    object \n",
            " 6   currency        845 non-null    object \n",
            " 7   availability    845 non-null    object \n",
            " 8   color           845 non-null    object \n",
            " 9   category        845 non-null    object \n",
            " 10  source          845 non-null    object \n",
            " 11  source_website  845 non-null    object \n",
            " 12  breadcrumbs     845 non-null    object \n",
            " 13  description     845 non-null    object \n",
            " 14  brand           845 non-null    object \n",
            " 15  images          845 non-null    object \n",
            " 16  country         845 non-null    object \n",
            " 17  language        845 non-null    object \n",
            " 18  average_rating  845 non-null    float64\n",
            " 19  reviews_count   845 non-null    int64  \n",
            " 20  crawled_at      845 non-null    object \n",
            "dtypes: float64(1), int64(3), object(17)\n",
            "memory usage: 138.8+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 603
        },
        "id": "-kEIRV9EHP7U",
        "outputId": "b75a939a-ba44-4100-9abd-b61db93a2dcd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   index                                                url  \\\n",
              "0      0  https://www.adidas.com/us/beach-shorts/FJ5089....   \n",
              "1      1  https://www.adidas.com/us/five-ten-kestrel-lac...   \n",
              "2      2  https://www.adidas.com/us/mexico-away-jersey/G...   \n",
              "3      3  https://www.adidas.com/us/five-ten-hiangle-pro...   \n",
              "4      4  https://www.adidas.com/us/mesh-broken-stripe-p...   \n",
              "\n",
              "                                              name     sku  selling_price  \\\n",
              "0                                     Beach Shorts  FJ5089             40   \n",
              "1        Five Ten Kestrel Lace Mountain Bike Shoes  BC0770            150   \n",
              "2                               Mexico Away Jersey  GC7946             70   \n",
              "3  Five Ten Hiangle Pro Competition Climbing Shoes  FV4744            160   \n",
              "4                    Mesh Broken-Stripe Polo Shirt  GM0239             65   \n",
              "\n",
              "  original_price currency availability  color  category  ...  \\\n",
              "0            NaN      USD      InStock  Black  Clothing  ...   \n",
              "1            NaN      USD      InStock   Grey     Shoes  ...   \n",
              "2            NaN      USD      InStock  White  Clothing  ...   \n",
              "3            NaN      USD      InStock  Black     Shoes  ...   \n",
              "4            NaN      USD      InStock   Blue  Clothing  ...   \n",
              "\n",
              "           source_website     breadcrumbs  \\\n",
              "0  https://www.adidas.com  Women/Clothing   \n",
              "1  https://www.adidas.com     Women/Shoes   \n",
              "2  https://www.adidas.com   Kids/Clothing   \n",
              "3  https://www.adidas.com  Five Ten/Shoes   \n",
              "4  https://www.adidas.com    Men/Clothing   \n",
              "\n",
              "                                         description   brand  \\\n",
              "0  Splashing in the surf. Making memories with yo...  adidas   \n",
              "1  Lace up and get after it. The Five Ten Kestrel...  adidas   \n",
              "2  Clean and crisp, this adidas Mexico Away Jerse...  adidas   \n",
              "3  The Hiangle Pro takes on the classic shape of ...  adidas   \n",
              "4  Step up to the tee relaxed. This adidas golf p...  adidas   \n",
              "\n",
              "                                              images country language  \\\n",
              "0  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "1  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "2  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "3  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "4  https://assets.adidas.com/images/w_600,f_auto,...     USA       en   \n",
              "\n",
              "  average_rating  reviews_count                  crawled_at  \n",
              "0            4.5             35  2021-10-23 17:50:17.331255  \n",
              "1            4.8              4  2021-10-23 17:50:17.423830  \n",
              "2            4.9             42  2021-10-23 17:50:17.530834  \n",
              "3            3.7              7  2021-10-23 17:50:17.615054  \n",
              "4            4.7             11  2021-10-23 17:50:17.702680  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-71955f50-b543-4be1-88d6-38ea30c13343\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>url</th>\n",
              "      <th>name</th>\n",
              "      <th>sku</th>\n",
              "      <th>selling_price</th>\n",
              "      <th>original_price</th>\n",
              "      <th>currency</th>\n",
              "      <th>availability</th>\n",
              "      <th>color</th>\n",
              "      <th>category</th>\n",
              "      <th>...</th>\n",
              "      <th>source_website</th>\n",
              "      <th>breadcrumbs</th>\n",
              "      <th>description</th>\n",
              "      <th>brand</th>\n",
              "      <th>images</th>\n",
              "      <th>country</th>\n",
              "      <th>language</th>\n",
              "      <th>average_rating</th>\n",
              "      <th>reviews_count</th>\n",
              "      <th>crawled_at</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>https://www.adidas.com/us/beach-shorts/FJ5089....</td>\n",
              "      <td>Beach Shorts</td>\n",
              "      <td>FJ5089</td>\n",
              "      <td>40</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Black</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Women/Clothing</td>\n",
              "      <td>Splashing in the surf. Making memories with yo...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.5</td>\n",
              "      <td>35</td>\n",
              "      <td>2021-10-23 17:50:17.331255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>https://www.adidas.com/us/five-ten-kestrel-lac...</td>\n",
              "      <td>Five Ten Kestrel Lace Mountain Bike Shoes</td>\n",
              "      <td>BC0770</td>\n",
              "      <td>150</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Grey</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Women/Shoes</td>\n",
              "      <td>Lace up and get after it. The Five Ten Kestrel...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.8</td>\n",
              "      <td>4</td>\n",
              "      <td>2021-10-23 17:50:17.423830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>https://www.adidas.com/us/mexico-away-jersey/G...</td>\n",
              "      <td>Mexico Away Jersey</td>\n",
              "      <td>GC7946</td>\n",
              "      <td>70</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>White</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Kids/Clothing</td>\n",
              "      <td>Clean and crisp, this adidas Mexico Away Jerse...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.9</td>\n",
              "      <td>42</td>\n",
              "      <td>2021-10-23 17:50:17.530834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>https://www.adidas.com/us/five-ten-hiangle-pro...</td>\n",
              "      <td>Five Ten Hiangle Pro Competition Climbing Shoes</td>\n",
              "      <td>FV4744</td>\n",
              "      <td>160</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Black</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Five Ten/Shoes</td>\n",
              "      <td>The Hiangle Pro takes on the classic shape of ...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>3.7</td>\n",
              "      <td>7</td>\n",
              "      <td>2021-10-23 17:50:17.615054</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>https://www.adidas.com/us/mesh-broken-stripe-p...</td>\n",
              "      <td>Mesh Broken-Stripe Polo Shirt</td>\n",
              "      <td>GM0239</td>\n",
              "      <td>65</td>\n",
              "      <td>NaN</td>\n",
              "      <td>USD</td>\n",
              "      <td>InStock</td>\n",
              "      <td>Blue</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>...</td>\n",
              "      <td>https://www.adidas.com</td>\n",
              "      <td>Men/Clothing</td>\n",
              "      <td>Step up to the tee relaxed. This adidas golf p...</td>\n",
              "      <td>adidas</td>\n",
              "      <td>https://assets.adidas.com/images/w_600,f_auto,...</td>\n",
              "      <td>USA</td>\n",
              "      <td>en</td>\n",
              "      <td>4.7</td>\n",
              "      <td>11</td>\n",
              "      <td>2021-10-23 17:50:17.702680</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71955f50-b543-4be1-88d6-38ea30c13343')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-71955f50-b543-4be1-88d6-38ea30c13343 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-71955f50-b543-4be1-88d6-38ea30c13343');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b2f8d9bf-29f4-4185-8c00-bc7f61f27414\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b2f8d9bf-29f4-4185-8c00-bc7f61f27414')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b2f8d9bf-29f4-4185-8c00-bc7f61f27414 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Pemeriksaan Struktur Data**"
      ],
      "metadata": {
        "id": "e1voh_mSLH7f"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"Jumlah baris dan kolom: {df.shape}\")  # Menampilkan (baris, kolom)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iu46e4-DLD17",
        "outputId": "df5f021a-0600-4b74-c1c2-cd0402b1c629"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Jumlah baris dan kolom: (845, 21)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Melihat Statistik Deskriptif**"
      ],
      "metadata": {
        "id": "Ilx7n_hjLMef"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qw12QGY-HWwb",
        "outputId": "0f26d31d-ad39-4329-cd90-e1ad54c7ac4a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            index  selling_price  average_rating  reviews_count\n",
              "count  845.000000     845.000000      845.000000     845.000000\n",
              "mean   422.000000      53.192899        4.608402     426.178698\n",
              "std    244.074784      31.411645        0.293795    1229.158277\n",
              "min      0.000000       9.000000        1.000000       1.000000\n",
              "25%    211.000000      28.000000        4.500000      19.000000\n",
              "50%    422.000000      48.000000        4.700000      68.000000\n",
              "75%    633.000000      70.000000        4.800000     314.000000\n",
              "max    844.000000     240.000000        5.000000   11750.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-566d2c1a-76a4-4d43-a228-b9574e55a2cb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>selling_price</th>\n",
              "      <th>average_rating</th>\n",
              "      <th>reviews_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>845.000000</td>\n",
              "      <td>845.000000</td>\n",
              "      <td>845.000000</td>\n",
              "      <td>845.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>422.000000</td>\n",
              "      <td>53.192899</td>\n",
              "      <td>4.608402</td>\n",
              "      <td>426.178698</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>244.074784</td>\n",
              "      <td>31.411645</td>\n",
              "      <td>0.293795</td>\n",
              "      <td>1229.158277</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>211.000000</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>4.500000</td>\n",
              "      <td>19.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>422.000000</td>\n",
              "      <td>48.000000</td>\n",
              "      <td>4.700000</td>\n",
              "      <td>68.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>633.000000</td>\n",
              "      <td>70.000000</td>\n",
              "      <td>4.800000</td>\n",
              "      <td>314.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>844.000000</td>\n",
              "      <td>240.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>11750.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-566d2c1a-76a4-4d43-a228-b9574e55a2cb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-566d2c1a-76a4-4d43-a228-b9574e55a2cb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-566d2c1a-76a4-4d43-a228-b9574e55a2cb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a2eb5b17-14d0-4ce4-9f01-7269512ff951\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2eb5b17-14d0-4ce4-9f01-7269512ff951')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a2eb5b17-14d0-4ce4-9f01-7269512ff951 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 304.3232952980255,\n        \"min\": 0.0,\n        \"max\": 845.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          845.0,\n          422.0,\n          633.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"selling_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 283.898378751333,\n        \"min\": 9.0,\n        \"max\": 845.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          53.19289940828402,\n          48.0,\n          845.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 297.50065415027694,\n        \"min\": 0.2937951199496684,\n        \"max\": 845.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.608402366863905,\n          4.7,\n          845.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4030.8842170505877,\n        \"min\": 1.0,\n        \"max\": 11750.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          426.1786982248521,\n          68.0,\n          845.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Melihat Korelasi Antar Variabel Numerik**"
      ],
      "metadata": {
        "id": "7XMv4aERLSTy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr(numeric_only=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o9Ld9xC3Heyr",
        "outputId": "8e0ac704-21de-4429-8e7b-5222d4b00f84"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   index  selling_price  average_rating  reviews_count\n",
              "index           1.000000       0.032265        0.046202      -0.097737\n",
              "selling_price   0.032265       1.000000       -0.213004       0.102654\n",
              "average_rating  0.046202      -0.213004        1.000000       0.023585\n",
              "reviews_count  -0.097737       0.102654        0.023585       1.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-767369e7-e1ca-46b4-b34f-927f454a035b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>selling_price</th>\n",
              "      <th>average_rating</th>\n",
              "      <th>reviews_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>index</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.032265</td>\n",
              "      <td>0.046202</td>\n",
              "      <td>-0.097737</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>selling_price</th>\n",
              "      <td>0.032265</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.213004</td>\n",
              "      <td>0.102654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>average_rating</th>\n",
              "      <td>0.046202</td>\n",
              "      <td>-0.213004</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.023585</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>reviews_count</th>\n",
              "      <td>-0.097737</td>\n",
              "      <td>0.102654</td>\n",
              "      <td>0.023585</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-767369e7-e1ca-46b4-b34f-927f454a035b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-767369e7-e1ca-46b4-b34f-927f454a035b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-767369e7-e1ca-46b4-b34f-927f454a035b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-20b58918-95f1-4dfc-a8bd-5db6841b78df\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20b58918-95f1-4dfc-a8bd-5db6841b78df')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-20b58918-95f1-4dfc-a8bd-5db6841b78df button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5073691109809239,\n        \"min\": -0.09773656590194202,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.03226477922521656,\n          -0.09773656590194202,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"selling_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5305555495768101,\n        \"min\": -0.2130035795942421,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          0.10265361754923404,\n          0.03226477922521656\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.536824641697245,\n        \"min\": -0.2130035795942421,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.2130035795942421,\n          0.023584856995810866,\n          0.0462017359862877\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5020598911714071,\n        \"min\": -0.09773656590194202,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.10265361754923404,\n          1.0,\n          -0.09773656590194202\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Cek Outliers menggunakan IQR**"
      ],
      "metadata": {
        "id": "WUO-6aTILclp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Q1 = df[['selling_price', 'average_rating', 'reviews_count']].quantile(0.25)\n",
        "Q3 = df[['selling_price', 'average_rating', 'reviews_count']].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "outliers = ((df[['selling_price', 'average_rating', 'reviews_count']] < (Q1 - 1.5 * IQR)) |\n",
        "            (df[['selling_price', 'average_rating', 'reviews_count']] > (Q3 + 1.5 * IQR))).sum()\n",
        "\n",
        "print(outliers)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7sPFTowRI6fX",
        "outputId": "bd9cce1a-a5d2-48ff-ddaf-a1d5a9582a18"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "selling_price     19\n",
            "average_rating    35\n",
            "reviews_count     93\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Mengecek Missing Values**"
      ],
      "metadata": {
        "id": "MibDDDmaKrF4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2luh60DzIVZs",
        "outputId": "28207c90-edc4-4ce2-a0a4-3538de89cf78"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "index              0\n",
              "url                0\n",
              "name               0\n",
              "sku                0\n",
              "selling_price      0\n",
              "original_price    16\n",
              "currency           0\n",
              "availability       0\n",
              "color              0\n",
              "category           0\n",
              "source             0\n",
              "source_website     0\n",
              "breadcrumbs        0\n",
              "description        0\n",
              "brand              0\n",
              "images             0\n",
              "country            0\n",
              "language           0\n",
              "average_rating     0\n",
              "reviews_count      0\n",
              "crawled_at         0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>index</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>url</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>name</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sku</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>selling_price</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>original_price</th>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>currency</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>availability</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>color</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>category</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>source</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>source_website</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>breadcrumbs</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>description</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>brand</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>images</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>country</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>language</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>average_rating</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>reviews_count</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>crawled_at</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Mengecek Data Duplikat**"
      ],
      "metadata": {
        "id": "cejCQbVWMBlQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.duplicated().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fUbBqMLPJBSx",
        "outputId": "23a8d691-48c8-42ae-94b3-6ad54d1ba6bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Data Preparation**"
      ],
      "metadata": {
        "id": "-Sdx1kWwKFKc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Menangani Missing Values**"
      ],
      "metadata": {
        "id": "k_IKabgdMUL8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop(columns=['original_price'], inplace=True)"
      ],
      "metadata": {
        "id": "wGLgTNpGJJat"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['original_price'] = df['selling_price']"
      ],
      "metadata": {
        "id": "YNh432hdMQfD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Menghapus Data Duplikat**"
      ],
      "metadata": {
        "id": "GBK4tuK-Mc6n"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop_duplicates(inplace=True)"
      ],
      "metadata": {
        "id": "LfR8PxsEJOTE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Menangani Outliers Menggunakan IQR**"
      ],
      "metadata": {
        "id": "C8sbh0bOMm40"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df[~((df[['selling_price', 'average_rating', 'reviews_count']] < (Q1 - 1.5 * IQR)) |\n",
        "          (df[['selling_price', 'average_rating', 'reviews_count']] > (Q3 + 1.5 * IQR))).any(axis=1)]"
      ],
      "metadata": {
        "id": "Khuqi5W2JVC5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Data Construction**"
      ],
      "metadata": {
        "id": "IBeLQCrHNNgl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Menambah Kolom Baru**"
      ],
      "metadata": {
        "id": "g7VRTa8VNWTV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['discount_percentage'] = ((df['original_price'] - df['selling_price']) / df['original_price']) * 100\n",
        "df['discount_percentage'].fillna(0, inplace=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YYwlGVJaM8_5",
        "outputId": "c4a9986f-1dfb-4232-b25d-9dda4b8328cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-57-6f393107149a>:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['discount_percentage'].fillna(0, inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Data Reduction**"
      ],
      "metadata": {
        "id": "0xQ_IZU_NYMI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Menghapus Kolom yang Tidak Relevan**"
      ],
      "metadata": {
        "id": "fvlUw1SaNcoY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop(columns=['index', 'url', 'images'], inplace=True)"
      ],
      "metadata": {
        "id": "IfAKJmOnNg5s"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Menyimpan data yang sudah di bersihkan**"
      ],
      "metadata": {
        "id": "Rkkbd4wGOBfh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.to_csv(\"adidas_cleaned.csv\")"
      ],
      "metadata": {
        "id": "zlHjbmmNOK_D"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Checkpoint 3 - Matplotlib & Seaborn**"
      ],
      "metadata": {
        "id": "w2Mh3e6Wb3X2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "[Sumber dataset yang saya gunakan](https://www.kaggle.com/datasets/thedevastator/adidas-fashion-retail-products-dataset-9300-prod)"
      ],
      "metadata": {
        "id": "GJnY5LbVfi0P"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Visualisasi Data**"
      ],
      "metadata": {
        "id": "ft-YRbmwGCvB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Disini saya akan mencoba untuk memvisualisasikan data antar hubungan antara harga dan rating pelanggan. Saya juga akan membuat visual antara jumlah ulasan dan rating pelanggan"
      ],
      "metadata": {
        "id": "wsqPO9bPLD-m"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "f34iWuDbAvuO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "file_path = \"/content/adidas_usa.csv\"\n",
        "\n",
        "df = pd.read_csv(file_path)"
      ],
      "metadata": {
        "id": "PtdlosBBA0db"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Hubungan Harga dan Rating Pelanggan**"
      ],
      "metadata": {
        "id": "o_qWw9_uBjnG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 5))\n",
        "\n",
        "df_low = df[df[\"selling_price\"] <= 100]   # Harga ≤ 100\n",
        "df_high = df[df[\"selling_price\"] > 100]   # Harga > 100\n",
        "\n",
        "sns.scatterplot(x=df_low[\"selling_price\"], y=df_low[\"average_rating\"],\n",
        "                color=\"blue\", alpha=0.6, label=\"Harga ≤ 100 USD\")\n",
        "sns.scatterplot(x=df_high[\"selling_price\"], y=df_high[\"average_rating\"],\n",
        "                color=\"red\", alpha=0.6, label=\"Harga > 100 USD\")\n",
        "\n",
        "plt.title(\"Hubungan Harga Produk dan Rating Pelanggan\")\n",
        "plt.xlabel(\"Harga Produk (USD)\")\n",
        "plt.ylabel(\"Rating Pelanggan\")\n",
        "plt.legend()\n",
        "plt.grid(True, linestyle=\"--\", alpha=0.7)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "id": "a654E0X1Bm1E",
        "outputId": "2adb1e83-1502-4897-bcee-6a9fc76a6fe5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dari hasil analisis di atas terdapat sebagian besar produk yang memiliki rating antara 4.0 - 5.0. dari hal ini menunjukan bahwa pelanggan sering memberikan review yang positif."
      ],
      "metadata": {
        "id": "EjIPrVY7Fmrv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Produk dengan harga di bawah 100 dolar mendominasi dataset dan tetap memiliki rating yang tinggi. Namun terdapat produk 100 dolar - 250 dolar yang ratingnya bervariasi sehingga menunjukan pola yang tidak jelas."
      ],
      "metadata": {
        "id": "iD5nJIu4L4uk"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Terdapat beberapa outilier dengan rating rendah yang dimana menunjukan ada pelanggan yang tidak puas."
      ],
      "metadata": {
        "id": "sKGHu9o7b2-X"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Insight & Tindakan**"
      ],
      "metadata": {
        "id": "hItWNh0DRJL9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Fokus pada produk dengan harga dibawah 100 dolar karena lebih banyak dibeli dan memiliki rating yang cukup banyak juga.\n",
        "- Lakukan analiisis terhadap produk dengan harga tinggi yang mendapatkan rating rendah.\n",
        "- Buat sebuah strategi diskon atau lakukan promosi pada produk yang mahal agar dapat menarik perhatian."
      ],
      "metadata": {
        "id": "w7kTQ9OlRLK2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Hubungan Jumlah Ulasan dan Rating Pelanggan**"
      ],
      "metadata": {
        "id": "XOSs6pJwcFoj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 5))\n",
        "sns.scatterplot(x=df[\"reviews_count\"], y=df[\"average_rating\"], alpha=0.6, color=\"green\")\n",
        "plt.title(\"Hubungan Jumlah Ulasan dan Rating Pelanggan\")\n",
        "plt.xlabel(\"Jumlah Ulasan\")\n",
        "plt.ylabel(\"Rating Pelanggan\")\n",
        "plt.grid(True, linestyle=\"--\", alpha=0.7)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "id": "8sFoDgW7cHv0",
        "outputId": "8c18cea0-e098-4dea-fa68-b27db76b24b1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Disini menunjukan bahwa mayoritas produk yang memiliki jumlah ulasan di bawah 200 memiliki rating yang tinggi (4.0 - 5.0). Produk dengan jumlah ulasan lebih dari 500 ternyata juga masih mempertahankan rating yang tinggi, hal ini menunjukan bahwa banyaknya jumlah ulasan tidak menurunkan persepsi pelanggan."
      ],
      "metadata": {
        "id": "ScUKneIUelH3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Namun disini terdapat beberapa produk yang memiliki rating rendah (< 3.0), tetapi jumlah ulasannya sedikit yang mungkin menunjukkan ketidakpuasan pelanggan terhadap produk tertentu."
      ],
      "metadata": {
        "id": "31PQ5aJwfMOP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Insight & Tindakan**"
      ],
      "metadata": {
        "id": "bZmH1pA6QI2j"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Produk dengan jumlah ulasan yang banyak lebih dipercaya pelanggan.\n",
        "- Agar pelanggan bisa memberikan jumlah ulasan yang lebih banyak dari sebelumnya kita dapat mencoba memberikan program loyalitas agar atau memberikan insentif.\n",
        "- Lakukan analiisis produk dengan sedikit ulasan dan rating rendah."
      ],
      "metadata": {
        "id": "ih2zNk3bQYSW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Distribusi Rating Berdasarkan Kategori Produk**"
      ],
      "metadata": {
        "id": "FC7Lu60QfiXe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "sns.boxplot(x=df[\"category\"], y=df[\"average_rating\"], palette=\"Set2\")\n",
        "plt.xticks(rotation=45)\n",
        "plt.title(\"Distribusi Rating Pelanggan Berdasarkan Kategori Produk\")\n",
        "plt.xlabel(\"Kategori Produk\")\n",
        "plt.ylabel(\"Rating Pelanggan\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 624
        },
        "id": "E8cNUI-dfnIi",
        "outputId": "86d8189e-53c0-4d60-9238-b15ae6b7153c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-22-c7a1d4de921e>:2: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(x=df[\"category\"], y=df[\"average_rating\"], palette=\"Set2\")\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Pada grafik diatas menampilkan setiap kategori produk mulai dari Clothing, Shoes, dan Accessories."
      ],
      "metadata": {
        "id": "K502qVoTt61_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Pada kategori Clothing, sebagian besar rating berada diantara 4.5 - 5.0, tetapi terdapat outlier di bawah 3.0."
      ],
      "metadata": {
        "id": "xHtfmi12uGfN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Pada kategori Shoes, ratingnya sendiri cenderung tinggi yang dimana berada sekitar 4.5, tetapi memiliki lebih banyak outlier dibandingkan dengan Clothing."
      ],
      "metadata": {
        "id": "IdDFNYs4ub2t"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Pada kategori Accessories memiliki rating tertinggi secara konsisten yang dimana hampir semua nilainya mendekati angka 5."
      ],
      "metadata": {
        "id": "8LwnJ6OHus25"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Insight & Tindakan**"
      ],
      "metadata": {
        "id": "7sv7v39-vQK3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Produk Accessories bisa lebih dipromosikan karena mendapat rating tinggi dan stabil.\n",
        "- Analisis lebih lanjut perlu dilakukan terhadap produk Clothing dan Shoes untuk memahami penyebab outlier.\n",
        "- Perlu dilakukan perbaikan pada produk dengan rating yang rendah untuk meningkatkan kepuasan pelanggan."
      ],
      "metadata": {
        "id": "BskQnoWyvWOp"
      }
    }
  ]
}
